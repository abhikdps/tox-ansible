name: tox-ansible

on:
  push:
    branches:
      - "main"
      - "chore/tox_ci"
      - "cp_fix_mytest"
  pull_request:
    branches:
      - main
      - "releases/**"
      - "stable/**"
  workflow_call:

jobs:
  tox-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tox-ansible, includes tox
        run: python3 -m pip install tox-ansible

      - name: Generate matrix
        working-directory: foo/bar
        id: generate-matrix
        run: |
          python3 -m tox --ansible --gh-matrix --conf tox-ansible.ini

    outputs:
      envlist: ${{ steps.generate-matrix.outputs.envlist }}

  test:
    needs: tox-matrix
    strategy:
      fail-fast: false
      matrix:
        entry: ${{ fromJson(needs.tox-matrix.outputs.envlist) }}
    name: ${{ matrix.entry.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.entry.python }}

      - name: Install ansible-creator, tox-ansible, includes tox
        run: python3 -m pip install tox-ansible ansible-creator

      - name: Create dir
        run: mkdir example

      - name: Scaffold an ansible collection using ansible-creator
        working-directory: example
        run: ansible-creator init collection "example.broken"

      - name: Run tox test
        working-directory: example
        run: python3 -m tox --ansible -e ${{ matrix.entry.name }} --conf tox-ansible.ini
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test_passed:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - run: >-
          python -c "assert set([
          '${{ needs.test.result }}',
          ]) == {'success'}"